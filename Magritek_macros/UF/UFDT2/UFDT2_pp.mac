########################################################
#
# UF D-T2
# Created by Mateusz-Urbanczyk
#
########################################################

procedure(pulse_program,dir,mode)


# Interface description (name, label, x, y, ctrlType, varType)
   interface = ["b1Freq",      "B1 Frequency (MHz)",   "0","0",    "tbwv",    "freq",
               "repTime",      "Repetition time (ms)", "0","2",   "tbwv",   "float,[20,1e8]",
               "90Amplitude",  "90 amplitude (dB)",    "1","0",     "tb",     "float,[-72,-6]",
               "180Amplitude", "180 amplitude (dB)",   "1","1",     "tb",     "pulseamp",
               "pulseLength",  "Pulse length (us)",    "1","2",     "tb",     "float,[1,500]",
               "echoTime",     "Echotime (us)",        "2","0",     "tb",     "sdelay",
               "nrEchoes",     "Number of echoes",     "2","1",     "tb",     "integer,[1,16000]",
               "echoShift",    "Echo shift (us)",      "2","2",     "tb",     "float,[-20,20]",
               	"gradient",     "Gradient (kHz/mm)",    "2","4",     "tbw",    "float",
				"CHIRPamplitude", "CHIRP 180 amplitude (dB)",   "1","3",     "tb",     "pulseamp",
               "CHIRPstep",  "CHIRP step length (us)",    "1","4",     "tb",     "float,[2,1000]",              
             	"AmplitudeTable", "File with amplitudeTable",      "3","0",  "tbw", "string, 200",
              	"PhaseTable", "File with Prospa phase table",  "3","1",  "tbw", "string, 200",               
               "Tablesize",     "Size of Amp and Phase tables",     "3","2",     "tb",     "integer,[1,64000]",
               "delta",       "small delta (ms)",         "3","3",     "tb",     "float,[0.001,100]",
               "DELTA",        "DELTA (ms)",           "3","4",     "tb",     "float,[0.001,10000]",
               "autoPhase",    "Auto-phase",           "2","3",     "cb",     "no,yes"]

  tabs = ["Pulse sequence","Acquisition","Laplace_CPMG","File Settings"]

# Relationships between pulse-sequence and GUI parameters
   relationships = ["a1 = 90Amplitude",
                    "a2 = 180Amplitude",
                    "d1 = pulseLength",
                    "d2 = 1000*delta+echoTime/2-d1-2*pgo-CHIRPstep*Tablesize",
                    "d3 = echoTime/2-acqTime*500-d1/2+rxLat+echoShift",
                    "d33 = echoTime-d1/2+echoShift",
                    "d4 = echoTime-d1-pgo-d3",
                    "d5 = 1000*delta-d1-2*pgo-CHIRPstep*Tablesize",
                    "d6 = CHIRPstep",
                    "w1 = 1000*DELTA",
                    "n1 = nrEchoes",
                    "n2 = nrPnts",
                    "n22 = Tablesize",
                    "t1 = linvec(1,0,n22)", #looks idiotic but not sure if matrix and vector are intertwined as table vector in prospa
                	"t2 = linvec(0,0,n22)",# this will keep console safe if writing table to DSP from mac will not succeed
                    "totPnts = nrEchoes*nrPnts",
                    "totTime = nrEchoes*echoTime"]

# These parameters will be changed between experiments
   variables = ["t1","t2"]

# x and y spacing between controls
   dim = [250,26]

# Pulse sequence
   initpp(dir) # Reset internal parameter list

   cleardata(64000)

   pulse(mode,a1,p1,d1)    # 90 pulse
   shapedrf(mode, t1,t2, p2, n22,d6)
   delay(d5)               # small delta
   pulse(mode,a1,p3,d1)    # 90 pulse
     
   wait(w1)                    # DELTA - Diffusion time

   pulse(mode,a1,p4,d1)           # 90 pulse
   shapedrf(mode, t1,t2, p5, n22,d6)
   delay(d2)                      # small delta + TE/2
   # pulse(mode,a2,p6,d1)        # 180 internal pulse
    #  delay(d33)                   # 180 - acq delay

   loop(l1,n1)
      pulse(mode,a2,p6,d1)        # 180 internal pulse
      delay(d3)                   # 180 - acq delay
      acquire("append",n2,d4)     # Acquire echo and wait
   endloop(l1)

   lst = endpp() # Return parameter list

# Phase cycle
#phaseList = [0,0,0,0,0,0,0,0;
#	       1,1,1,1,1,1,1,1;
#		 0,2,3,1,0,2,3,1;
#	       2,0,1,3,2,0,1,3;
#		 1,1,2,2,1,1,2,2;
#	       1,1,1,1,3,3,3,3;
#		 3,3,1,1,3,3,1,3]


#phaseList = [3,1,3,1,3,1,3,1;
 #  	       0,2,0,2,0,2,0,2;
  #           1,3,1,3,1,3,1,3;
##
	#       0,2,0,2,0,2,0,2;
       #      3,3,3,3,3,3,3,3;
	#	 0,2,0,2,0,2,0,2]


#phaseList = [0,0,0,0,0,0,0,0;
 #  	       1,1,1,1,1,1,1,1;
  #           2,0,0,2,2,0,0,2;
#	       0,2,2,0,0,2,2,0;
#	       1,1,2,2,1,1,2,2;
 #            1,1,1,1,3,3,3,3;
#		 3,3,1,1,3,3,1,1]

phaseList = [0,0,0,0,0,0,0,0;
   	       1,1,1,1,1,1,1,1;
             2,0,1,3,2,0,1,3;
	       0,2,3,1,0,2,3,1;
	       1,1,2,2,1,1,2,2;
             1,1,1,1,3,3,3,3;
		 0,0,2,2,0,0,2,2]

		#p3= 		 1,3,1,3,1,3,1,3;
	 
			 
   #phaseList = [0,2, 0,2, 0,2, 0,2, 1,3, 1,3, 1,3, 1,3; # 90 excitation
    #           0,0, 2,2, 0,0, 2,2, 0,0, 2,2, 0,0, 2,2; # 90 storing
     #          0,0, 0,0, 2,2, 2,2, 0,0, 0,0, 2,2, 2,2; # 90 reading
      #         1,1, 1,1, 1,1, 1,1, 0,0, 0,0, 0,0, 0,0; # 180 CPMG
       #        2,0, 0,2, 0,2, 2,0, 1,3, 3,1, 3,1, 1,3] # Acquire phase

endproc(lst,tabs,interface,relationships,variables,dim,phaseList)
